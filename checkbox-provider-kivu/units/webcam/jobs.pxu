# plugin: attachment
# category_id: kivu-webcam
# id: kivu-webcam/screenshot-attach
# estimated_duration: 1.0
# command:
#  set -o pipefail
#  cat "$PLAINBOX_SESSION_SHARE"/*reboot.1.log
# _description:
#  This will attach any screenshot

id: kivu-webcam/camera_detect
category_id: kivu-webcam
unit: job
plugin: shell
user: root
_summary: Detect camera
requires:
  executable.name == "gst-launch-1.0"
  manifest.has_camera == 'True'
flags: preserve-locale noreturn autorestart
estimated_duration: 180.0
command:
  camera_test.py detect
  echo "DETECT CAMERA HECTOR ($PLAINBOX_SESSION_SHARE): $?"
  apt install -y oem-somerville-tentacool-meta
  apt update
  apt install -y libcamhal-ipu6ep0
  dbus-send --system --print-reply --dest=org.freedesktop.login1 /org/freedesktop/login1 "org.freedesktop.login1.Manager.Reboot" boolean:true
_description:
  Check for camera

id: kivu-webcam/gstreamer_h264_webcam_encoding
category_id: kivu-webcam
plugin: shell
user: root
_summary: Encode H264 webcam video with gstreamer and capture GPU usage
depends: camera/detect
requires:
  executable.name == "gst-launch-1.0"
  executable.name == "intel_gpu_top"
  package.name == "gstreamer1.0-vaapi"
environ: GST_PLUGIN
command:
  timeout 10 intel_gpu_top -J > "${PLAINBOX_SESSION_SHARE}"/gstreamer_raw_webcam_encoding_intel_gpu_top.json &
  gpu_top_pid=$!
  timeout 10 gst-launch-1.0 -v --gst-plugin-path="${GST_PLUGIN}" v4l2src ! videoconvert ! video/x-raw ! fakesink
  if [[ "$?" -ne 124 ]]; then
      echo "Error"
      exit 1
  fi
  kill -TERM ${gpu_top_pid} &> /dev/null || true
  timeout 10 intel_gpu_top -J > "${PLAINBOX_SESSION_SHARE}"/gstreamer_h264_webcam_encoding_intel_gpu_top.json &
  gpu_top_pid=$!
  timeout 10 gst-launch-1.0 -v --gst-plugin-path="${GST_PLUGIN}" v4l2src ! videoconvert ! video/x-raw ! vaapih264enc ! fakesink
  if [[ "$?" -ne 124 ]]; then
      echo "Error"
      exit 1
  fi
  kill -TERM ${gpu_top_pid} &> /dev/null || true
  compare_intel_gpu_top_json.py "${PLAINBOX_SESSION_SHARE}"/gstreamer_h264_webcam_encoding_intel_gpu_top.json "${PLAINBOX_SESSION_SHARE}"/gstreamer_raw_webcam_encoding_intel_gpu_top.json
_description:
  This test checks the GPU usage by gstreamer for camera stream.
  The test depends on the camera detect (camera/detect). The camera availibility
  can be set in the [manifest] section of the checkbox configuration (checkbox-launcher)

id: kivu-webcam/chromium_h264_webcam_encoding
category_id: kivu-webcam
plugin: shell
user: root
_summary: Encode H264 webcam video with chromium and capture GPU usage
depends:
  camera/detect
  kivu-common/prepare-test-data
requires:
  snap.name == "chromium"
  executable.name == "intel_gpu_top"
command:
  timeout 10 intel_gpu_top -J > "${PLAINBOX_SESSION_SHARE}"/chromium_h264_webcam_encoding_disabled_intel_gpu_top.json &
  gpu_top_pid=$!
  sudo --preserve-env -u "${NORMAL_USER}" timeout 10 bash -c 'chromium --start-fullscreen \
                                                              --disable-features=VaapiVideoDecoder \
                                                              --use-fake-ui-for-media-stream \
                                                              --enable-logging=stderr 2>&1 \
                                                              file:///home/"${NORMAL_USER}"/checkbox-test-data/camera-streaming.html?encoding=h264 \
                                                              | tee "${PLAINBOX_SESSION_SHARE}"/chromium_camera_stream_encoding_vaapi_disabled.log'
  if [[ "$?" -ne 124 ]]; then
      echo "Error : ret=$?"
      exit 1
  fi
  kill -TERM ${gpu_top_pid} &> /dev/null || true
  timeout 10 intel_gpu_top -J > "${PLAINBOX_SESSION_SHARE}"/chromium_h264_webcam_encoding_enabled_intel_gpu_top.json &
  gpu_top_pid=$!
  sudo --preserve-env -u "${NORMAL_USER}" timeout 10 bash -c 'chromium --start-fullscreen \
                                                              --use-fake-ui-for-media-stream \
                                                              --enable-logging=stderr 2>&1 \
                                                              file:///home/"${NORMAL_USER}"/checkbox-test-data/camera-streaming.html?encoding=h264 \
                                                              | tee "${PLAINBOX_SESSION_SHARE}"/chromium_camera_stream_encoding_vaapi_enabled.log'
  if [[ "$?" -ne 124 ]]; then
      echo "Error : ret=$?"
      exit 1
  fi
  compare_intel_gpu_top_json.py "${PLAINBOX_SESSION_SHARE}"/chromium_h264_webcam_encoding_enabled_intel_gpu_top.json "${PLAINBOX_SESSION_SHARE}"/chromium_h264_webcam_encoding_disabled_intel_gpu_top.json


id: kivu-webcam/chromium_h264_onecopy
category_id: kivu-webcam
plugin: shell
user: root
_summary: Encode H264 webcam video and check onecopy usage
depends:
  camera/detect
  kivu-common/prepare-test-data
requires:
  snap.name == "chromium"
command:
  sudo --preserve-env -u "${NORMAL_USER}" timeout 10 bash -c 'chromium --start-fullscreen \
                                                              --use-fake-ui-for-media-stream \
                                                              --enable-logging=stderr 2>&1 \
                                                              --vmodule=*/video/linux/*=3,*/ui/gl/*=3,*/platform/wayland/*=3 \
                                                              file:///home/"${NORMAL_USER}"/checkbox-test-data/camera-streaming.html?encoding=h264 \
                                                              | tee "${PLAINBOX_SESSION_SHARE}"/chromium_camera_stream_onecopy.log'
  if [[ "$?" -ne 124 ]]; then
      echo "Error : ret=$?"
      exit 1
  fi
  grep V4L2CaptureDelegateGpuHelper "${PLAINBOX_SESSION_SHARE}"/chromium_camera_stream_onecopy.log
  if [[ $? -eq 1 ]] # No lines selected by grep?
  then
    echo "Failed: Could not detect use of V4L2CaptureDelegateGpuHelper"
    exit 1
  fi
_description:
  This test checks the verbose log of chromium after playing the camera video
  stream. If the string V4L2CaptureDelegateGpuHelper is present in this log,
  we know that the onecopy strategy is active.

